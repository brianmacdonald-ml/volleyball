<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="com.ressq.stateasy.dao,
										  com.ressq.stateasy.web,
										  com.ressq.stateasy.service"/>


  	<!-- the application context definition for the springapp DispatcherServlet -->

	<!-- Plumbing -->
	<bean class="com.ressq.stateasy.web.spring.ApplicationContextProvider"/>  
	    
	<!-- File Upload Handler -->
	<bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
	
	<!-- View Resolver takes view names and turns them into actual files in the WAR -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
        <property name="prefix" value="/WEB-INF/jsp/"></property>
        <property name="suffix" value=".jsp"></property>        
    </bean>

	<!-- Enable Annotation-based AOP -->
	<bean class="org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator" />
	<!-- Define the Advice we want to give to most of our Controllers -->
	<bean class="com.ressq.stateasy.aop.ControllerAdvice"></bean>
    
	<!-- Validators -->
	<bean id="viewValidator" class="com.ressq.stateasy.model.validators.ViewValidator">
		<constructor-arg><ref bean="columnValidator"/></constructor-arg>
    </bean>
	
	<bean id="columnValidator" class="com.ressq.stateasy.model.validators.ColumnValidator">
    	<property name="statService"  ref="statService"/>
    	<property name="sportService" ref="sportService"/>
    </bean>
	
	<bean id="eventGroupingValidator" class="com.ressq.stateasy.model.validators.EventGroupingValidator"/>
	
	<bean id="seasonValidator" class="com.ressq.stateasy.model.validators.SeasonValidator"/>
	
	<bean id="statTypeValidator" class="com.ressq.stateasy.model.validators.StatTypeValidator">
    	<property name="statTypeDAO"      ref="statTypeDAO"/>
    </bean>
    
    <bean id="liveViewValidator" class="com.ressq.stateasy.model.validators.LiveViewValidator"/>
    
    <!-- URL Mapper -->
    <bean id="inboundMessageAdapter" class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"></bean>
    
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <property name="messageConverters">
            <list>
                <bean id="byteArrayMessageConverter" class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
                <bean id="messageConverter" class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
                    <property name="marshaller" ref="xmlMarshaller" />
                    <property name="unmarshaller" ref="xmlMarshaller" />
                </bean>
            </list>
        </property>
    </bean>


   <bean id="xmlMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller" >
        <property name="classesToBeBound">
            <list>
                <value>com.ressq.stateasy.model.StatUser</value>
                <value>com.ressq.stateasy.model.UserMessage</value>
                <value>com.ressq.stateasy.model.messages.ClientUpdateMessage</value>
                <value>com.ressq.stateasy.model.messages.RequiredAgreements</value>
                <value>com.ressq.stateasy.model.messages.JaxbList</value>
                <value>com.ressq.stateasy.model.GameVideo</value>
                <value>com.ressq.stateasy.model.VideoProgressUpdate</value>
                <value>com.ressq.stateasy.model.VideoSegment</value>
                <value>com.ressq.stateasy.model.ServerResponseMessage</value>
                <value>com.turn.ttorrent.common.Torrent</value>
                <value>com.turn.ttorrent.tracker.TrackedTorrent</value>
				<value>java.util.HashMap</value>
                <value>java.util.HashSet</value>
            </list>
        </property>
    </bean>

	<!--
	*************************************************************************************
	                                  Hibernate Schtuff
	************************************************************************************* 
	-->

										  
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:hibernate.properties</value>
                <value>classpath:server.properties</value>
            </list>
        </property>
    </bean>
    
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName"><value>${hibernate.connection.driver_class}</value></property>
        <property name="url"><value>${hibernate.connection.url}</value></property>
        <property name="username"><value>${hibernate.connection.username}</value></property>
        <property name="password"><value>${hibernate.connection.password}</value></property>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource"><ref bean="dataSource"/></property>
        <property name="mappingDirectoryLocations">
            <list>
                <value>classpath:/com/ressq/stateasy/model</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
            </props>
        </property>
    </bean>
    
    <bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
    
    <tx:annotation-driven transaction-manager="txManager"/>
	
	<bean name="openSessionInViewInterceptor" class="org.springframework.orm.hibernate3.support.OpenSessionInViewInterceptor">
		<property name="sessionFactory">
			<ref bean="sessionFactory"/>
		</property>
	</bean>

	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
        <property name="interceptors"><list>
                <ref bean="openSessionInViewInterceptor" />                             
        </list></property>
	</bean>
</beans>